def add_time(start, duration, day=None):
    # Extract the start time and period (AM/PM)
    start_time, period = start.split()
    start_hour, start_minute = map(int, start_time.split(':'))
    
    # Extract the duration time
    duration_hour, duration_minute = map(int, duration.split(':'))
    
    # Calculate the total minutes
    total_minutes = start_hour * 60 + start_minute + duration_hour * 60 + duration_minute
    
    # Calculate the new time
    new_hour = total_minutes // 60 % 12
    new_hour = new_hour if new_hour != 0 else 12  # Adjust new_hour when it becomes 0
    new_minute = total_minutes % 60
    new_period = period
    
    # Calculate the number of days later
    days_later = total_minutes // (24 * 60)
    
    # Adjust the new hour and period
    if total_minutes // (12 * 60) % 2 == 1:
        if period == 'AM':
            new_period = 'PM'
        else:
            new_period = 'AM'
            days_later += 1
    
    # Determine the new day of the week if provided
    days_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    new_day = None
    if day:
        day_index = days_of_week.index(day.lower().capitalize())
        new_day_index = (day_index + days_later) % 7
        new_day = days_of_week[new_day_index]
    
    # Format the new time and day
    new_time = f"{new_hour}:{new_minute:02d} {new_period}"
    if new_day:
        new_time += f", {new_day}"
    
    # Add days later to the new time if applicable
    if days_later == 1:
        new_time += " (next day)"
    elif days_later > 1:
        new_time += f" ({days_later} days later)"
    
    return new_time
